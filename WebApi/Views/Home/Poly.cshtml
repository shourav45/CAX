
@{
    ViewBag.Title = "AddParty";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="http://code.jquery.com/ui/1.11.0/jquery-ui.js"></script>

<div class="row" style="background-color:dimgrey;height:918px;" ng-controller="FrmlClt">
    <form ng-submit="submitForm()" name="caxform" method="post" novalidate style="height: 84%;width: 94%;background-color: white;margin-top: 10%;margin-left: 3%;">
        <div class="col-md-12" style="background-color: lightgreen;height: 7%;border: groove;width: 99%;margin-left: 6px;margin-top: 5px;">
            <p style="color:white;text-align: center;font-size: xx-large;font-weight: bold;">Booking CN Poly</p>
        </div>
        <div class="row" style="margin-left: 1%;">
            <div class="col-md-6">
                <table class="table table-borderless" style="border-right: groove;">
                    <tr>
                        <td style="width: 29%;vertical-align: middle;">
                            <label> Date :</label>
                        </td>
                        <td ng-class="{ 'has-error' : submitted && caxform.CNDate.$invalid}">
                            <input autocomplete="off" class="form-control" type="text" name="CNDate" ng-model="Book.CNDate" id="datepicker" required>
                            <span ng-show="submitted &&  caxform.CNDate.$error.required" class="text-danger">Date is Required</span>
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle;">
                            <label>Destination :</label>
                        </td>
                        <td ng-class="{ 'has-error' : submitted && caxform.UserName.$invalid}">
                            <select class="form-control" name="UserName" ng-model="Book.Destination" data-show-subtext="true" data-live-search="true" required>
                                <option value="" data-subtext="">Select Destination</option>
                                <option ng-repeat="dest in DestinationList" value="{{dest.DestinationId}}" data-subtext="{{dest.Area}}">{{dest.District}}->{{dest.Area}}</option>
                            </select>
                            <span ng-show="submitted &&  caxform.UserName.$error.required" class="text-danger">Destination is Required</span>

                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle;">
                            <label>Party :</label>
                        </td>
                        <td ng-class="{ 'has-error' : submitted && caxform.PartyName.$invalid}">
                            <select id="PartyName" class="form-control" ng-change="LoadPartyRate(Book.PartyId,'Poly')" name="PartyName" ng-model="Book.PartyId" data-show-subtext="false" data-live-search="true" required>
                                <option value="" data-subtext="">Select Party</option>
                                <option ng-repeat="party in PartyList" value="{{party.PartyInfoId}}" data-subtext="">{{party.Name}}</option>
                            </select>
                            <span ng-show="submitted &&  caxform.PartyName.$error.required" class="text-danger">Party is Required</span>
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle;">
                            <label>Party Code :</label>
                        </td>
                        <td ng-class="{ 'has-error' : submitted && caxform.PartyInfoId.$invalid}">
                            <input class="form-control" name="PartyInfoId" type="text" disabled ng-model="Book.PartyId" required />
                            <span ng-show="submitted &&  caxform.PartyInfoId.$error.required" class="text-danger">Party code is Required</span>
                        </td>

                    </tr>
                    <tr>
                        <td style="vertical-align: middle;">
                            <label>CN Type :</label>
                        </td>
                        <td>
                            <input class="form-control" name="CNType" type="text" disabled value="Poly" required />
                        </td>

                    </tr>
                    <tr>
                        <td style="vertical-align: middle;">
                            <label>Service Type :</label>
                        </td>
                        <td ng-class="{ 'has-error' : submitted && caxform.ServiceType.$invalid}">
                            <select class="form-control" name="ServiceType" ng-model="Book.ServiceType" data-show-subtext="false" data-live-search="false" required>
                                <option value="" data-subtext="">Select Service Type</option>
                                <option value="In Dhaka" data-subtext="">In Dhaka</option>
                                <option value="Out Dhaka" data-subtext="">Out Dhaka</option>
                            </select>
                            <span ng-show="submitted &&  caxform.ServiceType.$error.required" class="text-danger">Service type is Required</span>
                        </td>

                    </tr>
                    <tr>
                        <td style="vertical-align: middle;">
                            <label> Fo/L No : </label>
                        </td>
                        <td ng-class="{ 'has-error' : submitted && caxform.Follio.$invalid}">
                            <input class="form-control" name="Follio" type="text" ng-model="Book.Follio" required />
                            <span ng-show="submitted &&  caxform.Follio.$error.required" class="text-danger">Fo/L is Required</span>
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle;">
                            <label>Consignee Name : </label>
                        </td>
                        <td ng-class="{ 'has-error' : submitted && caxform.ConsingeeName.$invalid}">
                            <input class="form-control" name="ConsingeeName" type="text" ng-model="Book.ConsingeeName" required />
                            <span ng-show="submitted &&  caxform.ConsingeeName.$error.required" class="text-danger">Consignee name is Required</span>
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle;">
                            <label>Consignee Address :</label>
                        </td>
                        <td ng-class="{ 'has-error' : submitted && caxform.ConsigneeAddress.$invalid}">
                            <textarea class="form-control" name="ConsigneeAddress" ng-model="Book.ConsigneeAddress" required></textarea>
                            <span ng-show="submitted &&  caxform.ConsigneeAddress.$error.required" class="text-danger">Consignee Address is Required</span>
                        </td>
                    </tr>

                </table>
            </div>
            <div class="col-md-6">
                <table class="table table-borderless">
                    <tr>
                        <td style="width: 20%;vertical-align: middle;">
                            <label> Item Info :</label>
                        </td>
                        <td ng-class="{ 'has-error' : submitted && caxform.ItemInfo.$invalid}">
                            <textarea class="form-control" name="ItemInfo" ng-model="Book.ItemInfo" required></textarea>
                            <span ng-show="submitted &&  caxform.ItemInfo.$error.required" class="text-danger">Item Info is Required</span>

                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle;">
                            <label>Poly Type:</label>
                        </td>
                        <td ng-class="{ 'has-error' : submitted && caxform.Ex1.$invalid}">
                            <select class="form-control" ng-change="FillRateEntry()" name="Ex1" ng-model="Book.Size" required>
                                <option value="" data-subtext="">Select Poly Type</option>
                                <option value="Big" data-subtext="">Big Poly</option>
                                <option value="Medium" data-subtext="">Medium Poly</option>
                                <option value="Small" data-subtext="">Small Poly</option>
                                <option value="Mobile" data-subtext="">Mobile Poly</option>
                            </select>
                            <span ng-show="submitted &&  caxform.Ex1.$error.required" class="text-danger">Size is Required</span>
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle;">
                            <label>Rate Type :</label>
                        </td>
                        <td ng-class="{ 'has-error' : submitted && caxform.optionsRadiosInline.$invalid}">
                            <div class="col-md-8">
                                <label class="radio-inline">
                                    <input type="radio" name="optionsRadiosInline" ng-model="Book.RateType" ng-click="FillRateEntry()" id="optionsRadiosInline1" value="Auto" required />Auto
                                </label>
                                <label class="radio-inline">
                                    <input type="radio" name="optionsRadiosInline" ng-model="Book.RateType" ng-click="FillRateEntry()" id="optionsRadiosInline2" value="Flat" required />Flat
                                </label>
                                <span ng-show="submitted &&  caxform.optionsRadiosInline.$error.required" class="text-danger">Rate type is Required</span>
                            </div>
                        </td>
                    </tr>

                    <tr>
                        <td style="vertical-align: middle;">
                            <label>Total Piece:</label>
                        </td>
                        <td ng-class="{ 'has-error' : submitted && caxform.KPNumber.$invalid}">
                            <input class="text-center form-control" name="KPNumber" ng-model="Book.KPNumber" type="text" required />
                            <span ng-show="submitted &&  caxform.KPNumber.$error.required" class="text-danger">Total Piece is Required</span>

                        </td>
                    </tr>
                </table>
                <table class="table-borderless" style="margin-left: 7%;">
                    <tr>
                        <td style="padding-bottom: 3%;" ng-class="{ 'has-error' : submitted && caxform.FirstPieceNumber.$invalid}">
                            <label class="control-label">
                                First   :
                            </label>
                            <input style="width:26%" class="text-center" name="FirstPieceNumber" disabled id="FirstPieceNumber" ng-model="FirstPieceNumber" type="text" required />

                            <label class="control-label">
                                Piece Rate :
                            </label>
                            <input style="width:26%" class="text-center" disabled id="FirstPieceRate" name="FirstPieceRate" ng-model="FirstPieceRate" type="text" required />
                            <span ng-show="submitted &&  caxform.FirstPieceNumber.$error.required" class="text-danger">Required</span>

                        </td>

                    </tr>
                    <tr>
                        <td style="padding-bottom: 3%;" ng-class="{ 'has-error' : submitted && caxform.AfterFirstPieceRate.$invalid}">
                            <label class="control-label">
                                After :
                            </label>
                            <input style="width:26%" class="text-center" disabled ng-model="FirstPieceNumber" type="text" required />
                            <label class="control-label">
                                Piece Rate :
                            </label>
                            <input style="width:26%" class="text-center" disabled id="AfterFirstPieceRate" name="AfterFirstPieceRate" ng-model="AfterFirstPieceRate" type="text" required />
                            <span ng-show="submitted &&  caxform.AfterFirstPieceRate.$error.required" class="text-danger">Required</span>

                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: center;padding-bottom: 4%;">
                            <a class="btn btn-info" ng-click="DoCalculate()" href="">Calculate</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-right: 22%;" ng-class="{ 'has-error' : submitted && caxform.TotalAmount.$invalid}">
                            <label class="col-md-4 control-label">
                                Total Amount:
                                <span style="color:red">*</span>
                            </label>
                            <div class="col-md-8">
                                <input class="text-center form-control" name="TotalAmount" disabled ng-model="Book.TotalAmount" type="text" required />
                                <div class="form-control-focus"> </div>
                                <span ng-show="submitted &&  caxform.TotalAmount.$error.required" class="text-danger">Required</span>
                            </div>
                        </td>

                    </tr>
                </table>
            </div>
        </div>
        <div class="col-md-12" style="background-color: lightgreen;height: 8%;PADDING-TOP: 1%;border: groove;width: 99%;margin-left: 6px;margin-top: -19px;">
            <input type="submit" class="btn btn-primary" style="width:16%;margin-left: 9px;" ng-click="submitted=true" value="Add" />
            <input type="reset" id="frmresetbtn" class="btn btn-warning" style="float:left;width: 16%;margin-left: 34%" ng-click="submitted=false" value="Reset" />
            @*<input type="button"  class="btn btn-warning" style="float:left;width: 16%;margin-left: 34%" ng-click="test()" value="test" />*@

        </div>
    </form>
</div>
@section Scripts{
    <!-- Page-Level Plugin Scripts-->
    <script type="text/javascript">
        $(document).ready(function () {
            $('#datepicker').datepicker({ format: "dd/mm/yyyy" });
        });
    </script>
    <script>
        CNApp.controller('FrmlClt', function ($scope, $http, DTOptionsBuilder, DTColumnBuilder) {
            init();
            function init() {
                initialize();
                LoadPartyList();
                LoadDestinationList();
            }

            function initialize() {
                $scope.vm = {};
                $scope.vm.dtOptions = DTOptionsBuilder.newOptions()
                  .withOption('order', [0, 'asc']);
                $scope.IsEdit = 0;
                $scope.Book = [];
                $scope.Book.RateType = 'Auto';
            }

            $scope.DateConvert = function DateConvert(str) {
                var re = /\/Date\(([0-9]*)\)\//;
                var m = str.match(re);
                var dt = new Date(parseInt(m[1]));
                var date = new Date(dt),
                    mnth = ("0" + (date.getMonth() + 1)).slice(-2),
                    day = ("0" + date.getDate()).slice(-2);
                return new Date([date.getFullYear(), mnth, day].join("-"));
            }
            $scope.DoCalculate = function DoCalculate() {
                if ($scope.Book.KPNumber == undefined || $scope.Book.KPNumber == 0) {
                    toastr.warning('Please enter total piece number first.');
                    return;
                }
                var FirstAmount = $scope.FirstPieceNumber * $scope.FirstPieceRate;
                var LeftPiece = $scope.Book.KPNumber - $scope.FirstPieceNumber;
                var SecoundAmount = LeftPiece * $scope.AfterFirstPieceRate;
                var TotalAmount = FirstAmount + SecoundAmount;
                $scope.Book.TotalAmount = TotalAmount;

            }
            $scope.FillRateEntry = function FillRateEntry() {
                var rateType = $("input[name=optionsRadiosInline]:checked").val();
                if (rateType != null && rateType != undefined && rateType == "Flat") {
                    // Enabling flat entry
                    $scope.ToggleRateEntryFields(false);

                    // Clear the Rate entry fields
                    $scope.Book.KPNumber = "";
                    $scope.FirstPieceNumber = "";
                    $scope.FirstPieceRate = "";
                    $scope.AfterFirstPieceRate = "";
                    $scope.Book.TotalAmount = "";
                    return;
                }

                //Disabling rate entry fields
                $scope.ToggleRateEntryFields(true);

                // Setting auto rate
                if ($scope.PartyRate != null && $scope.PartyRate != undefined) {

                    var availablePartyRate = $.grep($scope.PartyRate, function (obj) {
                        return obj.Ex1 == $scope.Book.Size && obj.RateType == 'Poly';
                    });
                    if (availablePartyRate.length == 0) {
                        toastr.warning('Rate not found. Please go for flat entry or add rate first.');
                        return;

                    }
                    if (availablePartyRate != null && availablePartyRate != undefined) {
                        $scope.Book.KPNumber = "";
                        $scope.FirstPieceNumber = availablePartyRate[0].FirstKP;
                        $scope.FirstPieceRate = availablePartyRate[0].FirstKPRate;
                        $scope.AfterFirstPieceRate = availablePartyRate[0].AfterFirstKPRate;
                        $scope.Book.TotalAmount = "";
                    }
                }
            }
            $scope.ToggleRateEntryFields = function ToggleRateEntryFields(disabled) {
                $("#FirstPieceNumber").prop("disabled", disabled);
                $("#FirstPieceRate").prop("disabled", disabled);
                $("#AfterFirstPieceRate").prop("disabled", disabled);
            }
            $scope.LoadPartyRate = function LoadPartyRate(PartyId, RateType) {
                $http.get("/RateInfoes/GetRateByPartyId?PartyId=" + PartyId + '&RateType=' + RateType)
                       .then(function successCallback(response) {
                           $scope.PartyRate = response.data;
                           console.log($scope.PartyRate);
                           toastr.options.positionClass = 'toast-bottom-right';
                           if ($scope.PartyRate == '0') {
                               toastr.warning('Rate not found. Please add rate or go for flat entry.');
                               return;
                           }
                       }, function errorCallback(response) {
                           //error msg
                       });
            }

            function LoadDestinationList() {
                $http.get("/api/Destinations")
                       .then(function successCallback(response) {
                           $scope.DestinationList = response.data;
                           toastr.options.positionClass = 'toast-bottom-right';
                       }, function errorCallback(response) {
                           //error msg
                       });
            }
            function LoadPartyList() {
                $http.get("/api/PartyInfoes")
                       .then(function successCallback(response) {
                           $scope.PartyList = response.data;
                           toastr.options.positionClass = 'toast-bottom-right';
                       }, function errorCallback(response) {
                       });
            }
            $scope.test=function()
            {
                swal({
                    title: "Success!",
                    text: "CN added successfully! Print now?",
                    type: "success",
                    showCancelButton: true,
                    confirmButtonColor: '#DD6B55',
                    confirmButtonText: 'Yes, Print now',
                    cancelButtonText: "No, Print later",
                    closeOnConfirm: false,
                    closeOnCancel: false
                },
               function (isConfirm) {
                   if (isConfirm) {
                       swal.close();
                       var win = window.open('test.com/cnid', '_blank');
                       win.focus();
                   } else {
                       swal.close();
                   }
               });
            }
            $scope.submitForm = function () {
                if ($scope.caxform.$invalid)
                    return;
                $http.post("/CNInfoes/PostCNInfo?CNType=Poly" +
                        "&PolySize=NULL&CNDate=" + $scope.Book.CNDate +
                        "&ServiceType=" + $scope.Book.ServiceType + "&PartyId=" + $scope.Book.PartyId +
                    "&Destination=" + $scope.Book.Destination + "&Follio=" + $scope.Book.Follio +
                    "&ConsingeeName=" + $scope.Book.ConsingeeName + "&ConsigneeAddress=" + $scope.Book.ConsigneeAddress +
                    "&ItemInfo=" + $scope.Book.ItemInfo + "&Kgpiece=" + $scope.Book.KPNumber +
                    "&RateType=" + $scope.Book.RateType + "&Weight=" + "0" + "&ServiceCharge=" + $scope.Book.ServiceCharge +
                    "&VatStatus=0&VatPercent=0&VatAmount=0&AitStatus=0&AitPercent=0&AitAmount=0&TotalAmount=" + $scope.Book.TotalAmount +
                    "&Size=" + $scope.Book.Size + "&KPNumber=" + $scope.Book.KPNumber + "&Ex1=" + $scope.AfterFirstPieceRate)
                            .then(function successCallback(response) {
                                console.log(response.data);

                                if (response.data != '0')
                                {
                                    $scope.Book = [];
                                    $("#frmresetbtn").trigger("click");
                                    swal({
                                        title: "Success!",
                                        text: "CN added successfully! Print now?",
                                        type: "success",
                                        showCancelButton: true,
                                        confirmButtonColor: '#DD6B55',
                                        confirmButtonText: 'Yes, Print now',
                                        cancelButtonText: "No, Print later",
                                        closeOnConfirm: false,
                                        closeOnCancel: false
                                    },
                               function (isConfirm) {
                                   if (isConfirm) {
                                       swal.close();
                                       var win = window.open('../Report/QuickPrint?CN=' + response.data, '_blank');
                                       win.focus();
                                   } else {
                                       swal.close();
                                   }
                               });
                                    return;
                                }
                                sweetAlert("Sorry!!", response.data, "error");

                            }, function errorCallback(response) {
                                //error msg
                            });
            }
        });
    </script>
}